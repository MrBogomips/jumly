extends _layouts/default

block title
  title JUMLY API Document

block styles
  link(rel='stylesheet', href="/api.css")
  link(rel='stylesheet', href="/public/bootstrap/docs/assets/css/bootstrap-responsive.css")

block prepend description
  - var _ = "JUMLY API Document provides how to use all APIs."
  -    _ += " "
  - var __description = _;

block navbar
  include _includes/navbar

block content
  .container-fluid
    .row-fluid
      .span3
        nav.menu
          ul
            li: a(href="#_REST") REST
            li: a(href="#_core") Core
              ul
                li: a(href="#_JUMLY_eval") eval
                li: a(href="#_JUMLY_scan") scan
            li: a(href="#_events") Events
            li: a(href="#_types") Types
      
      .span9
        h1 JUMLY API Document

        section#_REST
          h2 REST
          include _includes/heads-up

          p This is still unstable API, which means the I/F may be changed.
            | But it's already very useful.
          p Here is the spec,&nbsp;
            a(src='https://github.com/tmtk75/jumly/wiki/REST-API') https://github.com/tmtk75/jumly/wiki/REST-API

        section#_core
          h2 Core

          article
            header.entry-header
              .entry-meta
                span.category Core
              h3
                a(href='#_JUMLY_eval') JUMLY.eval
            .entry-summary
              p Evaluates given element and put diagram into document

          article
            header.entry-header
              .entry-meta
                span.category Core
              h3
                a(href='#_JUMLY_scan') JUMLY.scan
            .entry-summary
              p Evaluates matched nodes and inserts a diagram after the node. This doesn't evaluate same node twice or more.


        section#_events
          h2 Events


        #details
          section#_JUMLY_eval
            .category Categories: Core
            h3 JUMLY.eval()

            article
              .title
                .returns JUMLYDiagram
                .name JUMLY.eval()
              .summary
              .signatures
                .signature
                  .name JUMLY.eval(source, options)
                  ul
                    li.arg
                      .name source
                      .type: .name jQueryObject
                      .description Source element to evaluate its text value.
                    li.arg
                      .name options
                      .type: .name PlainObject
                      .description To give way to put diagram.
                        ul
                          li.arg
                            .name into
                            .type
                              .name Selector or jQueryObject
                            .description which $.html() is called

                .signature
                  .name JUMLY.eval(source, placer)
                  ul
                    li.arg
                      .name source
                      .type: .name jQueryObject
                      .description Source element to evaluate its text value.
                    li.arg
                      .name placer
                      .type
                        .name Function
                        .params
                          .param
                            .type JUMLYDiagram
                            .name diagram
                          .param
                            .type jQueryObject
                            .name source
                      .description To put diagram into somewhere you like.
              .description
                p To evaluae single element and put it into somewhere you specifiy.

                p Next examples similarly work.
                  | #holder-1 and #holder-2 contain each generated diagram as its html.

                :code
                  JUMLY.eval $("#diagram-1"), into:"#holder-1"

                :code
                  JUMLY.eval $("#diagram-2"), (diagram, source)->
                                                $("#holder-2").html diagram

          section#_JUMLY_scan
            .category Categories: Core
            h3 JUMLY.scan()

            article
              .title
                .returns
                .name JUMLY.scan()
              .summary
              .signatures
                .signature
                  .name JUMLY.scan(scope, [options])
                  ul
                    li.arg
                      .name scope
                      .default document
                      .type: .name Element
                      .description One element to scan JUMLY elements.
                    li.arg#_JUMLY_scan_1_options
                      .name options
                      .default built-in object
                      .type: .name PlainObject
                      .description Enable to give a few funtions to be used by JUMLY.scan.
                        ul
                          li.arg
                            .name finder
                            .type
                              .name Function
                              .params
                                .param
                                  .type jQueryObject
                                  .name scope
                            .description To return JUMLY elements you want
                          li.arg
                            .name placer
                            .type
                              .name Function
                              .params
                                .param
                                  .type JUMLYDiagram
                                  .name diagram
                                .param
                                  .type jQueryObject
                                  .name source
                            .description To put diagram into where you want

                .signature
                  .name JUMLY.scan(scope, [options])
                  ul
                    li.arg
                      .name scope
                      .type: .name jQueryObject
                      .description An existing jQuery object to scan JUMLY elements.
                    li.arg
                      .name options
                      .type: .name PlainObject
                      .description
                        | Enable to give a few funtions to be used by JUMLY.scan.
                        | Refer <a href="#_JUMLY_scan_1_options">here</a> for the detail.

              .description
                p
                  | Look up JUMLY elements in given elements or jQuery object,
                  | evaluate text value of each JUMLY element to build its diagram element,
                  | and put each diagram element into somewhere of document.

                p Following elements are matched as default.
                  | The scope is <code>document</code>.

                ul
                  li &lt;script&gt; node and its value of type attribute starts
                    | with <code>text/jumly+</code> like "text/jumly+sequence".
                    :code(type=html)
                      &lt;script type="text/jumly+sequence"&gt;
                  li Other element which value of data-jumly attribute starts
                    | with <code>text/jumly+</code> like "text/jumly+sequence".
                    :code(type=html)
                      &lt;div data-jumly="text/jumly+sequence"&gt;

                p Each generated diagram is inserted after each own source JUMLY element as default.

                :code(type=html)
                  &lt;script type="text/jumly+sequence"&gt;...&lt;/script&gt;
                  &lt;div class="diagram sequence-diagram"&gt;...

                p <code>JUMLY.scan</code> is executed at <code>DOMContentLoaded</code> event
                  | without any arguments like following.

                :code
                  JUMLY.scan()

                p Except for added new JUMLY elements,
                  | already evaluated JUMLY elements are ignored 
                  | even when you call JUMLY.scan() twice or more.
                  | If you add a new JUMLY element, it's evaluated.

                h4 options
                p 2nd parameter is to give a few functions which used by JUMLY.scan.
                p It can have <code>.finder</code> and <code>.placer</code> as property.
                  | <code>.finder</code> is a function taking one argument which is a jQuery object
                  | given as 1st argument of JUMLY.scan.
                  | <code>.placer</code> is a function taking two arguments which are generated diagram element
                  | and its source element.

                p Here is an example that returns all children and append all diagrams in body.

                :code
                  JUMLY.scan document,
                    finder: ($elements)-> $elements.find "> *"
                    placer: (diagram, $jumlyElement)-> $("body").append diagram

        section#_types
          h2 Types

          article#_type_PlainObject
            h3 PlainObject

          article#_type_jQueryObject
            h3 jQueryObject

          article#_type_JUMLYDiagram
            h3 JUMLYDiagram

          p TBD

  footer
    .copyright
      include _includes/copyright
  
  include _includes/fork-me-rt

